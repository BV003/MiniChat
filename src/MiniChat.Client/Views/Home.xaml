<Window x:Class="MiniChat.Client.Views.Home"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MiniChat.Client.Views"
        xmlns:mini="clr-namespace:MiniChat.Client"
        xmlns:sys="clr-namespace:System;assembly=System.Runtime" 
        mc:Ignorable="d"
        Title="{x:Static mini:Config.Name}" Height="620" Width="980"
        WindowStartupLocation="CenterScreen" Style="{StaticResource WindowStyle}"
        MouseDown="Window_MouseDown" Loaded="Window_Loaded" Closing="Window_Closing">
    <Window.Resources>

        
 
        <Style x:Key="ChatBubbleTextBlockStyle" TargetType="TextBlock">
            <Setter Property="Background" Value="#ADD8E6" />
            <!-- 设置背景颜色，这里示例为浅蓝色，你可以换成想要的颜色 -->
            <Setter Property="Foreground" Value="White" />
            <!-- 设置字体颜色，这里示例为白色 -->
            <Setter Property="Padding" Value="10,5,10,5" />
            
        </Style>
        
        <Style x:Key="HeadIconButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}" >
                        <Border Width="60" Height="60" CornerRadius="100" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}">
                            <Border.Background>
                                <ImageBrush>
                                    <ImageBrush.ImageSource>
                                        <DrawingImage>
                                            <DrawingImage.Drawing>
                                                <ImageDrawing ImageSource="{Binding UserModel.HeadIcon}" Rect="0,0,60,60" />
                                            </DrawingImage.Drawing>
                                        </DrawingImage>
                                    </ImageBrush.ImageSource>
                                </ImageBrush>
                            </Border.Background>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MainColor}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="5"
                    VerticalAlignment="Top" HorizontalAlignment="Right" >
            <Button Style="{StaticResource TitleButtonStyle}" Content="-" Click="WindowMinimized" Height="45" Width="45" />
            <Button Style="{StaticResource TitleButtonStyle}" Content="□" Click="WindowMaximized" Height="45" Width="45" />
            <Button Style="{StaticResource TitleButtonStyle}" Content="×" Click="WindowClose" Height="45" Width="45"/>
        </StackPanel>

        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="10"
                    VerticalAlignment="Top" HorizontalAlignment="Left">
            <Button Style="{StaticResource HeadIconButtonStyle}" Command="{Binding ShowUserInfoCommand}">
                <Button.CommandParameter>
                    <sys:Boolean>True</sys:Boolean>
                </Button.CommandParameter>
            </Button>
            <TextBlock Style="{StaticResource TextBlockStyle}" Text="{Binding UserModel.UserName}"
               Margin="15 15 15 0" Width="100" FontSize="25"/>

        </StackPanel>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1.5*" />
                <ColumnDefinition Width="8.5*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="7.5*" />
                <RowDefinition Height="2.5*" />
            </Grid.RowDefinitions>

            <ListBox Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Background="Transparent" BorderBrush="Gray"
                     BorderThickness="0,1,1,0"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     SelectedItem="{Binding SelectedFriend}" ItemsSource="{Binding FriendList}">
                <ListBox.ItemTemplate>
                    
                    <DataTemplate DataType="{x:Type ListBox}">
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <!-- 用于头像图片 -->
                                <ColumnDefinition Width="*" />
                                <!-- 用于现有内容 -->
                            </Grid.ColumnDefinitions>
                            <Image Source="/Resources/Images/boy.png" Width="70" Height="50" />
                            <!-- 显示头像图片 -->
                            <Grid Grid.Column="1">
                                <!-- 将现有内容放在一个新的Grid中 -->
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <TextBlock Margin="0,10,0,10" Foreground="{DynamicResource MainColor}" Text="{Binding NickName}" VerticalAlignment="Center" FontSize="27" />
                            </Grid>
                        </Grid>
                    </DataTemplate>
                    
                </ListBox.ItemTemplate>
                <ListBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="查看资料" Command="{Binding ShowUserInfoCommand}">
                            <MenuItem.CommandParameter>
                                <sys:Boolean>False</sys:Boolean>
                            </MenuItem.CommandParameter>
                        </MenuItem>
                        <MenuItem Header="移除好友" Command="{Binding RemoveFriendCommand}" />
                    </ContextMenu>
                </ListBox.ContextMenu>
            </ListBox>

            <ListBox x:Name="messageListBox" Grid.Column="1" Grid.Row="0" Background="Transparent"
BorderBrush="Gray" BorderThickness="0,1,0,1" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
ItemsSource="{Binding MessageList}" SelectionChanged="messageListBox_SelectionChanged" FontSize="20">
                <ListBox.Resources>
                    <!-- 滚动条样式 -->
                    <Style TargetType="ScrollBar">
                        <Setter Property="Width" Value="5"/>
                        <!-- 设置滚动条的宽度 -->
                        <Setter Property="Height" Value="400"/>
                        <!-- 设置垂直滚动条的高度 -->
                        <Setter Property="Background" Value="Transparent"/>
                        <!-- 设置滚动条的背景颜色 -->
                        <Setter Property="Foreground" Value="LightBlue"/>
                        <!-- 设置滚动条的滑块颜色 -->
                    </Style>
                    <Style TargetType="Thumb">
                        <Setter Property="Background" Value="LightBlue"/>
                        <!-- 设置滑块颜色 -->
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <!-- 设置滑块的边框颜色 -->
                        <Setter Property="BorderThickness" Value="2"/>
                        <!-- 设置滑块边框厚度 -->
                    </Style>
                    <!-- ScrollViewer样式 -->
                    <Style TargetType="ScrollViewer">
                        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
                    </Style>
                </ListBox.Resources>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    </Style>
                </ListBox.ItemContainerStyle>

                <ListBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type ListBox}">
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TextBlock Margin="0,15,0,0" Grid.Row="0" HorizontalAlignment="{Binding position}" Style="{StaticResource TextBlockStyle}" Text="{Binding Source.NickName}" />
                            <TextBlock Style="{StaticResource ChatBubbleTextBlockStyle}" Grid.Row="1" Text="{Binding Text}" HorizontalAlignment="{Binding position}" TextWrapping="Wrap" FontSize="30" />
                            <Image Grid.Row="1" Stretch="None" Source="{Binding Image}" HorizontalAlignment="{Binding position}"/>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <Grid Grid.Column="1" Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" Orientation="Horizontal">
                    <Button Style="{StaticResource BorderButtonStyle}" Command="{Binding SendImageCommand}">
                        <Image Source="/Resources/Images/picture.png" Width="50" Height="25" />
                    </Button>
                    <Button Style="{StaticResource BorderButtonStyle}" Margin="5 0 5 0" Command="{Binding SendFileCommand}">
                        <Image Source="/Resources/Images/folder.png" Width="50" Height="25" />
                    </Button>
                    <Button Style="{StaticResource BorderButtonStyle}" Command="{Binding RefreshCommand}">
                        <Image Source="/Resources/Images/refresh.png" Width="50" Height="25" RenderTransformOrigin="1.426,0.631" />
                    </Button>
                </StackPanel>

                <TextBox Grid.Row="1" Margin="5" TextWrapping="Wrap" Text="{Binding Message}" FontSize="20">
                    <TextBox.Template>
                        <ControlTemplate>
                            <Border>
                                <ScrollViewer x:Name="PART_ContentHost" />
                            </Border>
                        </ControlTemplate>
                    </TextBox.Template>
                </TextBox>

                <Button Style="{StaticResource ButtonStyle}" Grid.Row="2" Margin="0 0 10 10"
                        Width="90" Height="30" Content="发送" HorizontalAlignment="Right"
                        Command="{Binding SendTextCommand}" />
            </Grid>
        </Grid>
    </Grid>
</Window>